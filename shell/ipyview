#!/usr/bin/env python2.7
# -*- coding:utf-8 -*-
# ipyview.py

import os, sys
import re
import numpy as np
import pandas as pd
#from datetime import datetime, timedelta
#from dateutil.parser import parse
#import matplotlib
#matplotlib.use('Agg')
#import matplotlib.pyplot as plt
#from mpl_toolkits.basemap import Basemap
#from matplotlib import mlab
from netCDF4 import Dataset
from pylab import *
from metlib import *
from metlib.color import *
from metlib.lidar import *

from IPython import Config, embed

speaker = sys.stdout
warner = sys.stderr

ipythonconfig = Config({
    'TerminalInteractiveShell': {'banner1': '', 'editor': 'vim', 'pylab': 'qt'}, 
    })

def load_everything(fname):
    try:
        fname = expand_path(fname)
        ext = get_ext(fname)
        if ext == '.npy':
            return np.load(fname)
        elif ext in ('.nc', '.ncf'):
            data = Dataset(fname, mode='r')
            if 'lidarname' in data.ncattrs():
                return LidarDataset(fname)
            else:
                return data
        elif ext in ('.h5', '.h5f', '.hdf', '.hdf5'):
            return pd.HDFStore(fname, mode='r')
        elif ext in ('.csv'):
            return pd.DataFrame.from_csv(fname)
        elif ext in ('.zip'):
            varnames = loadbasket(fname)
            return varnames
        elif ext in ('.txt'):
            return np.loadtxt(fname)
    except Exception as e:
        warner.write("Error while loading : %s \n" % fname)
        warner.write(e)
        warner.write('\n')

if __name__ == '__main__':
    remain_args = get_sys_argv([], [], [])
    
    globald = sys.modules['__main__'].__dict__
    if len(remain_args) == 1:
        data = load_everything(remain_args[0])
        print "data :"
        print data
    else:
        for i, fname in enumerate(remain_args):
            varname = 'data%d' % i
            globald[varname] = load_everything(fname)
            print varname, ":"
            print globald[varname]

    for varname, fname in _sys_argv_kwargs.iteritems():
        globald[varname] = load_everything(fname)
        print varname, ":"
        print globald[varname]

    embed(config=ipythonconfig)
